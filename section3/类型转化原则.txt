
编译器通过校验表来确定在算数表达式中执行的转换：

1.	如果有一个操作数的类型是long double，则将另一个操作数转换为long double

2.	否则，如果有一个操作数的类型是double，则将另一个操作数转换为double


3.	否则，如果有一个操作数的类型是float, 则将另一个操作数转化为float

4.	否则，说明操作数都是整型，因此执行整型提升


5.	在这种情况下，如果两个操作数都是有符号或者无符号的，且其中一个操作数的级别比另一个低，则转换为级别高的类型

6.	如果一个操作数为有符号的，另一个操作数为无符号的，且无符号操作数的级别比有符号操作数高，则将有符号操作数转换为无符号操作数所属的类型


7.	否则，如果有符号类型可表示无符号类型的所有可能取值，则将无符号操作数转换为有符号操作数所属的类型

8.	否则，将两个操作数都转换为有符号类型的无符号版本


注： 
1.	有符号整型按级别高低依次为： long long、long 、int、short、signed char

2.	无符号整型的排列顺序与有符号整型相同. 

3.	类型 char、signed char、和 unsigned char 级别相同

4.	类型bool的级别最低

5.	Wchar_t、char16_t、char32_t的级别与底层类型相同
